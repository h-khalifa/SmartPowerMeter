@model List<PowerReadingsDemo.Models.Measure>
@{
    ViewBag.Title = "Show";
    ViewBag.Active = "Index";
}
<style>
    .btn-circle {
        width: 50px;
        height: 50px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.42;
        border-radius: 25px;
    }
    .center-block {
        float: none !important
    }
    ul {
        list-style: none
    }
    li{
        margin:5px;
    }
</style>

<h2>Device Measures</h2>
<div>
    <div class="row">
        <div class="col-md-10">

            <div class="">
                @foreach (var measure in Model)
                {
                    foreach (var lkp in measure.ReadingLKPs)
                    {
                        <button data-measure-id="@measure.Id" class="btn btn-info btn-circle hidden" onclick="readingClicked(@lkp.Id)">@lkp.Symbol</button>
                    }
                }
            </div>
            @*<canvas id="line-chart" width="800" height="450"></canvas>*@
            <div style="width: 100%; overflow-x: auto; overflow-y: hidden; margin-top: 10px;">
                <div style="width: 900px; height: 450px">
                    <canvas id="line-chart" height="450" width="0" style="background-color: whitesmoke;"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-1">
            <div class="btn-group-vertical">
                @foreach (var measure in Model)
                {
                    <button class="btn btn-info text-uppercase" style="margin: 5px auto;" data-measure-id="@measure.Id" onclick="measureClicked(@measure.Id)">@measure.MeasureName</button>
                }
            </div>
            
        </div>
        <div class="col-md-1"></div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.0.1/chart.min.js" integrity="sha512-tQYZBKe34uzoeOjY9jr3MX7R/mo7n25vnqbnrkskGr4D6YOoPYSpyafUAzQVjV6xAozAqUFIEFsCO4z8mnVBXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.0.1/chart.umd.min.js" integrity="sha512-HyprZz2W40JOnIBIXDYHCFlkSscDdYaNe2FYl34g1DOmE9J+zEPoT4HHHZ2b3+milFBtiKVWb4sorDVVp+iuqA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.0.1/helpers.min.js" integrity="sha512-c0j5ITIxnG5CknVw3Tl4LrXCBV6Vevg3OFbTFWnuItsDokxEix501UjCggJC2McxWe2Arq4XYJdHd0VLKUc9aQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>


<script>
    var charted;
    function measureClicked(mId) {
        $(".btn-circle").addClass('hidden');
        $('.btn-circle[data-measure-id=' + mId + ']').removeClass('hidden');

        $.ajax({
            type: 'GET',
            url: '/PowerMeter/GetMeasureReadings?MID=' + mId,
            success: function (d) {
                var labels = d[0].Readings.map(item => item.ValueTime)
                var data = new Array(d.map(function (readinglkp) { return readinglkp.Readings.map(item => item.Value) }))
                var ttl = new Array(d.map(function (item) { return (item.Name + ' (' + item.Unit + ')') }))
                renderCharts(labels, data, ttl);
            },
            error: function (p1, p2, p3) {
                console.log(p1);
                console.log(p2);
                console.log(p3);
            }
        })

    }

    function readingClicked(rId) {
        $.ajax({
            type: 'GET',
            url: '/PowerMeter/GetReadingLkp?RID=' + rId,
            success: function (d) {
                var labels = d.Readings.map(item => item.ValueTime)
                var data = d.Readings.map(item => item.Value)
                var ttl = d.Name + ' (' + d.Unit + ')' 
                renderChart(labels, data, ttl);
            },
            error: function (p1, p2, p3) {
                console.log(p1);
                console.log(p2);
                console.log(p3);
            }
        })

    }
    function renderChart(lbls, data, title) {
        try {
            charted.destroy();
        }
        catch (error) {

        }
        charted = new Chart(document.getElementById("line-chart"), {
            type: "line",
            data: {
                labels: lbls,
                datasets: [{
                    label: title,
                    data: data,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Those Measurements are introduced by smart power meter!"
                },
            }
        });

    }

    function renderCharts(lbls, datas, titles) {
        try {
            charted.destroy();
        }
        catch (error) {

        }
        var tempObj = datas[0].map(function (item, index) {
            return {
                label: titles[0][index],
                data: datas[0][index],
                fill: false,
                tension: 0.1
            }
        })
        charted = new Chart(document.getElementById("line-chart"), {
            type: "line",
            data: {
                labels: lbls,
                datasets: tempObj
            },
            options: {
                title: {
                    display: true,
                    text: "Those Measurements are introduced by smart power meter!"
                },
            }
        });

    }

</script>

